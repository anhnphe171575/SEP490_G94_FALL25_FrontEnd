{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///G:/SEP/frontend/softcapstone/src/app/MuiProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ThemeProvider, createTheme, CssBaseline, responsiveFontSizes } from \"@mui/material\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFnsV3\";\r\n\r\ntype Props = { children: React.ReactNode };\r\n\r\nlet theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n    primary: { main: \"#2563eb\" }, // blue-600\r\n    secondary: { main: \"#7c3aed\" }, // violet-600\r\n    background: { default: \"#f7f7fb\", paper: \"#ffffff\" },\r\n    divider: \"#e6e6ef\",\r\n  },\r\n  shape: { borderRadius: 12 },\r\n  typography: {\r\n    fontFamily: `ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial`,\r\n    fontWeightMedium: 600,\r\n    h1: { fontWeight: 700 },\r\n    h2: { fontWeight: 700 },\r\n    h3: { fontWeight: 700 },\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      defaultProps: { variant: \"contained\", disableElevation: true },\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: \"none\",\r\n          borderRadius: 10,\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: \"outlined\" },\r\n          style: { borderColor: \"#e6e6ef\" },\r\n        },\r\n      ],\r\n    },\r\n    MuiCard: {\r\n      defaultProps: { variant: \"outlined\" },\r\n      styleOverrides: {\r\n        root: {\r\n          borderColor: \"#e6e6ef\",\r\n          borderRadius: 14,\r\n        },\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      styleOverrides: {\r\n        rounded: { borderRadius: 14 },\r\n      },\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: { boxShadow: \"none\", borderBottom: \"1px solid #e6e6ef\" },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default function MuiProvider({ children }: Props) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        {children}\r\n      </LocalizationProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AALA;;;;;AASA,IAAI,QAAQ,IAAA,0NAAW,EAAC;IACtB,SAAS;QACP,MAAM;QACN,SAAS;YAAE,MAAM;QAAU;QAC3B,WAAW;YAAE,MAAM;QAAU;QAC7B,YAAY;YAAE,SAAS;YAAW,OAAO;QAAU;QACnD,SAAS;IACX;IACA,OAAO;QAAE,cAAc;IAAG;IAC1B,YAAY;QACV,YAAY,CAAC,2EAA2E,CAAC;QACzF,kBAAkB;QAClB,IAAI;YAAE,YAAY;QAAI;QACtB,IAAI;YAAE,YAAY;QAAI;QACtB,IAAI;YAAE,YAAY;QAAI;IACxB;IACA,YAAY;QACV,WAAW;YACT,cAAc;gBAAE,SAAS;gBAAa,kBAAkB;YAAK;YAC7D,gBAAgB;gBACd,MAAM;oBACJ,eAAe;oBACf,cAAc;gBAChB;YACF;YACA,UAAU;gBACR;oBACE,OAAO;wBAAE,SAAS;oBAAW;oBAC7B,OAAO;wBAAE,aAAa;oBAAU;gBAClC;aACD;QACH;QACA,SAAS;YACP,cAAc;gBAAE,SAAS;YAAW;YACpC,gBAAgB;gBACd,MAAM;oBACJ,aAAa;oBACb,cAAc;gBAChB;YACF;QACF;QACA,UAAU;YACR,gBAAgB;gBACd,SAAS;oBAAE,cAAc;gBAAG;YAC9B;QACF;QACA,WAAW;YACT,gBAAgB;gBACd,MAAM;oBAAE,WAAW;oBAAQ,cAAc;gBAAoB;YAC/D;QACF;IACF;AACF;AAEA,QAAQ,IAAA,kPAAmB,EAAC;AAEb,SAAS,YAAY,EAAE,QAAQ,EAAS;IACrD,qBACE,8OAAC,gOAAa;QAAC,OAAO;;0BACpB,8OAAC,+NAAW;;;;;0BACZ,8OAAC,qNAAoB;gBAAC,aAAa,uMAAc;0BAC9C;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///G:/SEP/frontend/softcapstone/src/app/EmotionRegistry.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useServerInsertedHTML } from \"next/navigation\";\r\nimport React from \"react\";\r\nimport createCache from \"@emotion/cache\";\r\nimport { CacheProvider } from \"@emotion/react\";\r\n\r\nfunction createEmotionCache() {\r\n  // Prepend MUI styles to avoid specificity issues and keep insertion stable\r\n  return createCache({ key: \"mui\", prepend: true });\r\n}\r\n\r\nexport default function EmotionRegistry({ children }: { children: React.ReactNode }) {\r\n  const [{ cache, flush }] = React.useState(() => {\r\n    const cache = createEmotionCache();\r\n    cache.compat = true;\r\n    const prevInsert = cache.insert;\r\n    let inserted: string[] = [];\r\n    cache.insert = (...args: any[]) => {\r\n      const serialized = args[1];\r\n      if (cache.inserted[serialized.name] === undefined) {\r\n        inserted.push(serialized.name);\r\n      }\r\n      return prevInsert(...args);\r\n    };\r\n    const flush = () => {\r\n      const prev = inserted;\r\n      inserted = [];\r\n      return prev;\r\n    };\r\n    return { cache, flush };\r\n  });\r\n\r\n  useServerInsertedHTML(() => {\r\n    const names = flush();\r\n    if (names.length === 0) return null;\r\n    let styles = \"\";\r\n    for (const name of names) {\r\n      styles += cache.inserted[name];\r\n    }\r\n    return (\r\n      <style\r\n        data-emotion={`${cache.key} ${names.join(\" \")}`}\r\n        // Using dangerouslySetInnerHTML to inline critical CSS for SSR\r\n        dangerouslySetInnerHTML={{ __html: styles }}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <CacheProvider value={cache}>{children}</CacheProvider>;\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,SAAS;IACP,2EAA2E;IAC3E,OAAO,IAAA,+LAAW,EAAC;QAAE,KAAK;QAAO,SAAS;IAAK;AACjD;AAEe,SAAS,gBAAgB,EAAE,QAAQ,EAAiC;IACjF,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,gNAAK,CAAC,QAAQ,CAAC;QACxC,MAAM,QAAQ;QACd,MAAM,MAAM,GAAG;QACf,MAAM,aAAa,MAAM,MAAM;QAC/B,IAAI,WAAqB,EAAE;QAC3B,MAAM,MAAM,GAAG,CAAC,GAAG;YACjB,MAAM,aAAa,IAAI,CAAC,EAAE;YAC1B,IAAI,MAAM,QAAQ,CAAC,WAAW,IAAI,CAAC,KAAK,WAAW;gBACjD,SAAS,IAAI,CAAC,WAAW,IAAI;YAC/B;YACA,OAAO,cAAc;QACvB;QACA,MAAM,QAAQ;YACZ,MAAM,OAAO;YACb,WAAW,EAAE;YACb,OAAO;QACT;QACA,OAAO;YAAE;YAAO;QAAM;IACxB;IAEA,IAAA,2JAAqB,EAAC;QACpB,MAAM,QAAQ;QACd,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO;QAC/B,IAAI,SAAS;QACb,KAAK,MAAM,QAAQ,MAAO;YACxB,UAAU,MAAM,QAAQ,CAAC,KAAK;QAChC;QACA,qBACE,8OAAC;YACC,gBAAc,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,IAAI,CAAC,MAAM;YAC/C,+DAA+D;YAC/D,yBAAyB;gBAAE,QAAQ;YAAO;;;;;;IAGhD;IAEA,qBAAO,8OAAC,yPAAa;QAAC,OAAO;kBAAQ;;;;;;AACvC","debugId":null}}]
}